name: ${compose_name}

services:
  mimic3:
    container_name: ${mimic3_service_name}
    image: mycroftai/mimic3
    ports:
      - ${mimic3_port}:${mimic3_port}
    restart: unless-stopped
    volumes:
      - ./services/audio/voices:/home/mimic3/.local/share/mycroft/mimic3/voices
    command: --preload-voice de_DE/thorsten_low

  audio-service:
    container_name: ${audio_service_name}
    depends_on:
      - mimic3
    build: ./services/audio
    restart: unless-stopped
    ports:
      - ${audio_service_port}:${audio_service_port}
    volumes:
      - ./services/:/services
      - ./config:/config
      - type: bind
        source: ./config/asound.conf
        target: /etc/asound.conf
        read_only: true
    devices:
      - /dev/snd:/dev/snd
    env_file:
      - .env
    healthcheck:
      test: curl --fail -s http://${audio_service_name}:${audio_service_port}/health || exit 1

  google-service:
    container_name: ${google_service_name}
    build: 
      context: ./
      dockerfile: ./services/google/Dockerfile
    restart: unless-stopped
    ports:
      - ${google_service_port}:${google_service_port}
    volumes:
      - ./services/:/services
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    healthcheck:
      test: curl --fail -s http://${google_service_name}:${google_service_port}/health || exit 1

  weather-service:
    container_name: ${weather_service_name}
    build: 
      context: ./
      dockerfile: ./services/weather/Dockerfile
    restart: unless-stopped
    ports:
      - ${weather_service_port}:${weather_service_port}
    volumes:
      - ./services/:/services
      - ./config:/config
    env_file:
      - .env
    healthcheck:
      test: curl --fail -s http://${weather_service_name}:${weather_service_port}/health || exit 1

  voice-assistant:
    container_name: ${voice_assistant_service_name}
    depends_on:
      audio-service:
        condition: service_healthy
      google-service:
        condition: service_healthy
      weather-service:
        condition: service_healthy
      infoscreen-service:
        condition: service_healthy
    build: 
      context: ./
      dockerfile: ./services/voice_assistant/Dockerfile
    restart: unless-stopped
    volumes:
      - ./services/:/services
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - type: bind
        source: ./config/asound.conf
        target: /etc/asound.conf
        read_only: true
      - type: bind
        source: ./config/config.json
        target: /config/config.json
        read_only: true
    devices:
      - /dev/snd:/dev/snd
    env_file:
      - .env

  infoscreen-service:
    container_name: ${infoscreen_service_name}
    privileged: true
    depends_on:
      google-service:
        condition: service_healthy
      weather-service:
        condition: service_healthy
    build: ./services/infoscreen
    restart: unless-stopped
    ports:
      - ${infoscreen_service_port}:${infoscreen_service_port}
    volumes:
      - ./services/:/services
      - type: bind
        source: ./config/asound.conf
        target: /etc/asound.conf
        read_only: true
      - type: bind
        source: ./config/config.json
        target: /config/config.json
        read_only: true
      - type: bind
        source: /sys
        target: /sys
        read_only: true
    devices:
      - /dev/gpiomem:/dev/gpiomem
    env_file:
      - .env
    healthcheck:
      test: curl --fail -s http://${infoscreen_service_name}:${infoscreen_service_port}/health || exit 1

  refresher-service:
    container_name: ${infoscreen_refresher_name}
    depends_on:
      infoscreen-service:
        condition: service_healthy
      weather-service:
        condition: service_healthy
      audio-service:
        condition: service_healthy
    build:
      context: ./
      dockerfile: ./services/refresher/Dockerfile
    restart: unless-stopped
    volumes:
      - ./services/:/services
      - type: bind
        source: ./config/config.json
        target: /config/config.json
        read_only: true
    env_file:
      - .env

  restarter:
    container_name: ${service_restarter_name}
    depends_on:
      - voice-assistant
      - infoscreen-service
    image: docker:cli
    volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
    command:
      - "/bin/sh"
      - "-c"
      - |
        while true; do
          date
          sleep 60
          if [ "$$(date +'%H:%M')" = '03:00' ]; then
            echo Restarting ${voice_assistant_service_name}
            docker restart ${voice_assistant_service_name}
            echo Restarting ${infoscreen_service_name}
            docker restart ${infoscreen_service_name}
          fi
        done
    restart: unless-stopped
